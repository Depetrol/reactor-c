name: Run benchmarks
description: Run benchmarks and collect results

inputs:
  scheduler:
    type: string  # A comma-separated list (no spaces!) is allowed.
    required: true
  runtime-ref:
    type: string
    required: true


outputs:
  output-file:
    description: "The CSV file summarizing all benchmark results"
    value: ${{ steps.collect-results.outputs.output-file }}
  

runs:
  using: "composite"
  steps:
    - name: Update LFC
      run: |
        echo $(ls)
        echo "Checking out ${{ inputs.runtime-ref }}"
        cd lf/org.lflang/src/lib/c/reactor-c && \
            git checkout ${{ inputs.runtime-ref }} && cd ../../../../..
        git checkout $(cat org.lflang/src/lib/c/reactor-c/lingua-franca-ref.txt)
        echo $(ls)
        ./gradlew buildLfc
        cd ..
      shell: bash

    - name: Run benchmarks
      # TODO: Run all benchmarks with several numbers of threads
      # run: |
      #   ./runner/run_benchmark.py -m continue_on_error=True iterations=12 \
      #     benchmark="glob(*)" target=lf-c size=fast \
      #     target.params.scheduler=GEDF_NP,NP,adaptive threads=1,3,6,12,24
      run: |  # DEBUG
        ./runner/run_benchmark.py -m continue_on_error=True iterations=12 \
          benchmark="savina_concurrency_cigsmok" target=lf-c size=fast \
          target.params.scheduler=${{ inputs.scheduler }} threads=1,3
      shell: bash

    - name: Collect benchmark results
      id: collect-results
      run: |
        SHA=$(cd lf/org.lflang/src/lib/c/reactor-c && \
          git rev-parse --short=7 HEAD && cd ../../../../..)
        BRANCH=$(git rev-parse --abbrev-ref HEAD)
        OUTPUT_FILE=${{ inputs.scheduler }}-$BRANCH-$SHA.csv
        echo "The collected benchmark results will be saved to $OUTPUT_FILE"
        ./runner/collect_results.py latest $OUTPUT_FILE
        echo "::set-output name=output-file::$OUTPUT_FILE"
      shell: bash
