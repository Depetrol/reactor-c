name: Run benchmarks
description: Run benchmarks and collect results

inputs:
  scheduler:
    type: string  # A comma-separated list (no spaces!) is allowed.
    required: true
  runtime-ref:
    type: string
    required: true
  target:
    type: string
  num-workers:
    type: string  # Provide a comma-separated list without spaces.
    description: The number of workers to be used by the scheduler.
    required: true


outputs:
  output-file:
    description: "The CSV file summarizing all benchmark results"
    value: ${{ steps.compute-output-file.outputs.output-file }}


runs:
  using: "composite"
  steps:
    - name: Check out requested branches
      id: check-out
      run: |
        echo $(ls)
        echo "Checking out ${{ inputs.runtime-ref }}"
        SUBMODULE_DIR=org.lflang/src/lib/${{ inputs.target }}/reactor-${{ inputs.target }}
        cd lf/$SUBMODULE_DIR && \
            git checkout ${{ inputs.runtime-ref }} && cd ../../../../..
        git checkout $(cat $SUBMODULE_DIR/lingua-franca-ref.txt)
        echo "::set-output name=submodule-dir::$SUBMODULE_DIR"
        cd ..
      shell: bash

    - name: Compute output file
      id: compute-output-file
      run: |
        SHA=$(cd lf/${{ steps.check-out.outputs.submodule-dir }} && \
          git rev-parse --short=7 HEAD && cd ../../../../../..)
        BRANCH=${{ inputs.runtime-ref }}
        OUTPUT_DIR=csvs/$(date -I)
        mkdir -p reactor-c/$OUTPUT_DIR
        OUTPUT_FILE=$OUTPUT_DIR/${{ inputs.scheduler }}-${{ inputs.num-workers }}-$BRANCH-${SHA:0:7}.csv
        echo "::set-output name=output-file::$OUTPUT_FILE"
        if [ -f reactor-c/$OUTPUT_FILE ]; then
          echo "The benchmark will not be run because results for that commit are already saved at $OUTPUT_FILE."
          echo "::set-output name=file-already-exists::true"
        else
          echo "The collected benchmark results will be saved to $OUTPUT_FILE."
        fi
      shell: bash

    - name: Update LFC
      run: |
        cd lf
        ./gradlew buildLfc
        cd ..
      shell: bash
      if: ${{ ! steps.compute-output-file.outputs.file-already-exists }}

    - name: Run benchmarks
      run: |
        ./runner/run_benchmark.py -m continue_on_error=True iterations=12 \
          benchmark="glob(*)" target=lf-${{ inputs.target }} size=fast \
          ++target.params.scheduler=${{ inputs.scheduler }} threads=${{ inputs.num-workers }}
      shell: bash
      if: ${{ ! steps.compute-output-file.outputs.file-already-exists }}

    - name: Collect benchmark results
      id: collect-results
      run: |
        ./runner/collect_results.py latest reactor-c/${{ steps.compute-output-file.outputs.output-file }}
      shell: bash
      if: ${{ ! steps.compute-output-file.outputs.file-already-exists }}
