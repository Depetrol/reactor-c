name: Continuous Benchmarking


on:
  pull_request:
  workflow_dispatch:


permissions:
  contents: write
  deployments: write


jobs:
  benchmark:
    name: Run C Benchmarks
    runs-on: ubuntu-latest #FIXME: change to self-hosted after russel is set up.

    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Checkout benchmark repository
        uses: actions/checkout@v2
        with:
          repository: lf-lang/benchmarks-lingua-franca
          ref: cb # FIXME: delete this line after merge

      - name: Checkout Lingua Franca repository
        uses: actions/checkout@v2
        with:
          repository: lf-lang/lingua-franca
          path: lf

      - name: Prepare LF build environment
        uses: ./lf/.github/actions/prepare-build-env

      - name: Checkout current version of reactor-c
        uses: actions/checkout@v2
        with:
          path: lf/org.lflang/src/lib/c/reactor-c

      - name: Install Python dependencies
        run: pip3 install -r runner/requirements.txt

      - name: Build lfc
        run: |
          cd lf
          ./gradlew buildLfc

      - name: Set LF_PATH and LF_BENCHMARKS_PATH environmental variable
        run: |
          echo "LF_PATH=$GITHUB_WORKSPACE/lf" >> $GITHUB_ENV
          echo "LF_BENCHMARKS_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Run C Benchmarks
        run: |
          python3 runner/run_benchmark.py -m continue_on_error=True iterations=12 benchmark="glob(*)" target=lf-c

      - name: Collect results
        run: python3 runner/collect_results.py latest continuous_benchmarking_results.json

      # Use continuous benchmark action to store result
      - name: Store Benchmark Result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Lingua Franca C target Benchmark
          tool: customSmallerIsBetter
          output-file-path: continuous_benchmarking_results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true

          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '100%' # FIXME: After russel is set up, lower the threshold and set alert/comment to true
          comment-on-alert: true
          fail-on-alert: false
